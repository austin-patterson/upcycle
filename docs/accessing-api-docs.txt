Valuenetwork uses graphql to send and recieve data. Because graphql only provides a framework, each product implementing graphql has its own schema. 
To access the documentation for valuenetwork, you must point your browser to the backend (i.e localhost:8000)
Then, add /api/graphiql to the end of the connection. For example:

http://localhost:8000/api/graphiql

Would bring up the documentaion for a valuenetwork app running locally on port 8000.

Once connected, the graphql playground will be visible. On the left side, there is a window to type graphql queries and mutations
Below that, there is a smaller window to type any variables (in the context of this project, the user tokens will be stored here)
On the right side is where the results of a query will be displayed after clicking the excecute button.

To view the schema for the app, click on the docs tab in the upper right hand corner.
The schema is organized in a tree format. To view queries or mutaions, for example, click on the corresponding heading.
The headings should also be typed. For example, if query was clicked, then getViewer, the query would look like:

query getViewer{

}

Once attributes are available for an object, those will be displayed as well. If getViewer had an attribute viewer, the query would appear as:

query getViewer(
    viewer
}

note that clicking on an attribute will display sub-attributes and methods, if any are available.

Some queries and mutations need variables. The documentation will only display the type of variable needed, such as:

password : String!

would be replaced with

password : "12345"

Note that any mutations executed in the playground WILL change data on the backend as if they were called from within the app.